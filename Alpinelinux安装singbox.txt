1、添加testing源：
echo "https://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories

添加sing-box：
apk add sing-box

然后加入OpenRC自启动：
chmod +x /etc/init.d/sing-box
rc-update add sing-box default
service sing-box start

2、安装证书 acme.sh
安装很简单，一条命令:
curl https://get.acme.sh | sh -s

修改默认 CA
acme.sh 脚本默认 CA 服务器是 ZeroSSL，有时可能会导致获取证书的时候一直出现：Pending，The CA is processing your order，please just wait.
只需要把 CA 服务器改成 Let's Encrypt 即可，虽然更改以后还是有概率出现 pending，但基本 2-3 次即可成功
acme.sh --set-default-ca --server letsencrypt

使用独立服务模式
如果服务器上没有运行任何 Web 服务，80 端口是空闲的，那么 acme.sh 还能假装自己是一个 WebServer，临时监听 80 端口，完成验证:
acme.sh --issue --standalone -d xlovett.eu.org

复制证书
证书生成好以后，我们需要把证书复制给对应的 Apache、Nginx 或其他服务器去使用。
必须使用 --install-cert 命令来把证书复制到目标文件，请勿直接使用 ~/.acme.sh/ 目录下的证书文件，这里面的文件都是内部使用，而且目录结构将来可能会变化。

acme.sh --install-cert -d xlovett.eu.org \
--cert-file      /etc/sing-box/xlovett.eu.org.crt  \
--key-file       /etc/sing-box/xlovett.eu.org.key  \
--fullchain-file /etc/sing-box/fullchain.cer \     hy2需要完整证书链
--reloadcmd     "service sing-box reload"       singbox不需要

查看已安装证书信息
acme.sh --info -d xlovett.eu.org

3、编辑/etc/sing-box/config.json

{
    "inbounds": [
        {
            "type": "hysteria2",
            "listen": "::",
            "listen_port": 23363,
            "up_mbps": 500,
            "down_mbps": 50,
            "users": [
                {
                    "password": "7335cda1-30c7-463d-9671-dcb5abcb70a4"
                    "name": "Ora2-singbox_hysteria2",
                }
            ],
            "tls": {
                "enabled": true,
                "alpn": [
                    "h3"
                ],
                "certificate_path": "/etc/sing-box/fullchain.cer",
                "key_path": "/etc/sing-box/xlovett.eu.org.key"
            }
        }
    ],
    "outbounds": [
        {
            "type": "direct"
        }
    ]
}





{
  "log": {
    "level": "info"
  },
  "dns": {
    "servers": [
      {
        "address": "tls://8.8.8.8"
      }
    ]
  },
  "inbounds": [
    {
      "type": "shadowsocks",
      "listen": "::",
      "listen_port": 6060,
      "sniff": true,
      "network": "tcp",
      "method": "aes-256-gcm",
      "password": "xca,./123"
    }
  ],
  "outbounds": [
    {
      "type": "direct"
    },
    {
      "type": "dns",
      "tag": "dns-out"
    }
  ],
  "route": {
    "rules": [
      {
        "protocol": "dns",
        "outbound": "dns-out"
      }
    ]
  }
}
